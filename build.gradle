plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.dokka' version '1.7.20'
}

group 'com.mrkirby153'
version '2.0-SNAPSHOT'

java.targetCompatibility = JavaVersion.VERSION_11
java.sourceCompatibility = JavaVersion.VERSION_11

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

repositories {
    mavenCentral()
    maven {
        url = "https://repo.mrkirby153.com/repository/maven-public/"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation 'io.github.microutils:kotlin-logging-jvm:3.0.4'
    compileOnly "net.dv8tion:JDA:5.0.0-beta.1"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

javadocJar.dependsOn dokkaJavadoc
javadocJar.from dokkaJavadoc

String propertyOrEnv(property, env) {
    return project.hasProperty(property) ? project.properties[property] : System.getenv(env)
}

def publishUrl() {
    if (project.version.endsWith('-SNAPSHOT'))
        return "https://repo.mrkirby153.com/repository/maven-snapshots/"
    else
        return "https://repo.mrkirby153.com/repository/maven-releases/"
}

publishing {
    tasks.publish.dependsOn build
    repositories {
        maven {
            name = "mrkirby153"
            url = publishUrl()
            credentials {
                username propertyOrEnv('repositoryUsername', 'REPO_USERNAME')
                password propertyOrEnv('repositoryPassword', 'REPO_PASS')
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.dokkaHtml.configure {
    suppressInheritedMembers.set(true)
}